<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>


    <!--在pom.xml这一级目录的命令行窗口执行mvn mybatis-generator:generate即可（前提是配置了mvn）-->

    <!--<properties resource="/Users/newchama/Documents/E/workspace-ide/joingu/gulj-app-blog-biz/src/main/resources/config/mybatis.properties"/>-->
    <!--url="file:/Users/newchama/Documents/E/workspace-ide/joingu/gulj-app-blog-biz/src/main/resources/config/mybatis.properties"-->
    <properties
            url="file:/Users/gulj/Documents/E/workspace_idea/joingu/gulj-app-blog-biz/src/main/resources/config/mybatis.properties"/>


    <classPathEntry
            location="${classPath}"/>


    <context id="sqlserverTables" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 生成的pojo，将implements Serializable -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>


        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="com.gulj.app.blog.biz.JoinGuMapper"/>
        </plugin>

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>


        <!-- 数据库链接URL、用户名、密码 com.mysql.jdbc.Driver-->
        <jdbcConnection driverClass="${jdbc_driver}"
                        connectionURL="${jdbc_url}" userId="${jdbc_user}" password="${jdbc_password}">
        </jdbcConnection>


        <!--
        默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--
        生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，
        也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下
        -->
        <javaModelGenerator targetPackage="com.gulj.app.blog.api.entity"
                            targetProject="/Users/gulj/Documents/E/workspace_idea/joingu/gulj-app-blog-api/src/main/java">
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格  -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--对应的mapper.xml文件  -->
        <sqlMapGenerator targetPackage="mappers" targetProject="src/main/resources/">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类文件 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.gulj.app.blog.biz.mapper"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>


        <!-- 列出要生成代码的所有表，这里配置的是不生成Example文件 -->
        <table tableName="blog_category" domainObjectName="BlogCategory"
               enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false">
            <!--<generatedKey column="id" sqlStatement="Mysql" identity="true"/>-->
            <property name="useActualColumnNames" value="false"/>
        </table>


        <!--  mysql 配置
          <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
          <property name="useActualColumnNames" value="true"/>
          oracle 配置
          <generatedKey column="id" sqlStatement="select SEQ_{1}.nextval from dual" identity="false" type="pre"/>
          <table tableName="">
          <property name="useActualColumnNames" value="true"/>
          <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
          </table>-->


    </context>
</generatorConfiguration>