<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gulj.app.blog.biz.mapper.BlogArticleMapper">
    <resultMap id="BaseResultMap" type="com.gulj.app.blog.api.entity.BlogArticle">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="sys_user_id" jdbcType="INTEGER" property="sysUserId"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="love" jdbcType="BIGINT" property="love"/>
        <result column="hot" jdbcType="BIGINT" property="hot"/>
        <result column="comment" jdbcType="BIGINT" property="comment"/>
        <result column="is_recommed" jdbcType="TINYINT" property="isRecommed"/>
        <result column="is_show" jdbcType="BIT" property="isShow"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>


    <!--分页查询首页的文章列表-->
    <select id="queryListPageIndexInfo" parameterType="com.gulj.app.blog.api.bo.BusinessParamBo" resultType="com.gulj.app.blog.api.vo.BlogArticleListVo">
        select baseData.stand,bc.id as categoryId,bc.name as categoryName, ba.* from(
            SELECT
                id ,
                sum(hot + love + COMMENT) stand ,
                create_time
            FROM
                blog_article
            GROUP BY
                id
            HAVING
                stand > #{stand}
            ORDER BY
                create_time
        ) baseData
         inner join  (select * from blog_article where is_recommed = 1 and is_show=1 and is_delete = 0 ) ba on ba.id = baseData.id
         inner join  blog_category bc on ba.category_id = bc.id
    </select>


</mapper>